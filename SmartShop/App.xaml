<Application x:Class="SmartShop.App"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
			 Startup="OnStartup">
	<Application.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/BusyIndicator;component/Theme/Default.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<!--  Application Primary Color  -->
			<SolidColorBrush x:Key="AppThemePrimaryColor"
							 Color="#00214D" />

			<!--  Application Secondary Color  -->
			<SolidColorBrush x:Key="AppThemeSecondaryColor"
							 Color="#0059b3" />

			<!--  Application Tetriary Color  -->
			<SolidColorBrush x:Key="AppThemeTetriaryColor"
							 Color="#D1EAFF" />

			<!--  Application Quaternary Color  -->
			<SolidColorBrush x:Key="AppThemeQuaternaryColor"
							 Color="GhostWhite" />

			<!--  Pagination Button Style  -->
			<Style x:Key="PaginationButtonStyle"
				   TargetType="Button">
				<Setter Property="Padding" Value="6 3" />
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="Margin" Value="2" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Width" Value="50" />
				<Setter Property="BorderBrush" Value="#ccc" />
				<Setter Property="Background" Value="#f4f4f4" />
				<Setter Property="Foreground" Value="#333" />
				<Setter Property="FontFamily" Value="Segoe UI" />
				<Setter Property="FontSize" Value="18" />
				<Setter Property="Cursor" Value="Hand" />
				<Style.Resources>
					<Style TargetType="Border">
						<Setter Property="CornerRadius" Value="5" />
					</Style>
				</Style.Resources>
				<Style.Triggers>
					<DataTrigger Binding="{Binding Content, RelativeSource={RelativeSource Self}}"
								 Value="...">
						<Setter Property="Background" Value="Transparent" />
						<Setter Property="IsHitTestVisible" Value="False" />
						<Setter Property="Foreground" Value="#A5A5A5" />
						<Setter Property="BorderThickness" Value="0" />
					</DataTrigger>
					<Trigger Property="IsMouseOver" Value="True">
						<Setter Property="Background" Value="#e9e9e9" />
						<Setter Property="Foreground" Value="#333" />
					</Trigger>
					<Trigger Property="IsPressed" Value="True">
						<Setter Property="Background" Value="#ddd" />
					</Trigger>
					<DataTrigger Binding="{Binding IsCurrent}"
								 Value="True">
						<Setter Property="Background" Value="DarkSlateGray" />
						<Setter Property="Foreground" Value="White" />
					</DataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
							<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="True" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Foreground" Value="#333" />
					</MultiDataTrigger>
				</Style.Triggers>
			</Style>

			<!--  Beautiful Button Style  -->
			<Style TargetType="Button">
				<Setter Property="Background" Value="DarkSlateGray" />
				<Setter Property="Foreground" Value="White" />
				<Setter Property="BorderBrush" Value="DarkSlateGray" />
				<Setter Property="Width" Value="100" />
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="BorderThickness" Value="2" />
				<Setter Property="Padding" Value="3" />
				<Setter Property="FontFamily" Value="Segoe UI" />
				<Setter Property="FontSize" Value="16" />
				<Setter Property="Cursor" Value="Hand" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Border x:Name="border"
									Padding="{TemplateBinding Padding}"
									Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									CornerRadius="10"
									SnapsToDevicePixels="True">
								<ContentPresenter x:Name="contentPresenter"
												  HorizontalAlignment="Center"
												  VerticalAlignment="Center"
												  Content="{TemplateBinding Content}"
												  ContentTemplate="{TemplateBinding ContentTemplate}"
												  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled" Value="False">
									<Setter TargetName="border" Property="Opacity" Value="0.5" />
									<Setter TargetName="contentPresenter" Property="Opacity" Value="0.5" />
								</Trigger>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter TargetName="border" Property="Background" Value="#508B8D" />
									<Setter TargetName="border" Property="BorderBrush" Value="#32696B" />
								</Trigger>
								<Trigger Property="IsPressed" Value="True">
									<Setter TargetName="border" Property="Background" Value="Silver" />
									<Setter TargetName="border" Property="BorderBrush" Value="SlateGray" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<!--  Vertical ScrollBar Default Style  -->
			<Style TargetType="{x:Type ScrollViewer}">
				<Setter Property="VerticalScrollBarVisibility" Value="Auto" />
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
			</Style>

			<!--  Default TextBlock Style  -->
			<Style TargetType="{x:Type TextBlock}">
				<Setter Property="TextWrapping" Value="Wrap" />
				<Setter Property="TextAlignment" Value="Center" />
			</Style>

			<Style TargetType="{x:Type Grid}">
				<Style.Resources>
					<Style TargetType="{x:Type ScrollBar}">
						<Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
						<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
						<Setter Property="MinWidth" Value="10" />
						<Setter Property="Focusable" Value="False" />
						<Setter Property="IsTabStop" Value="False" />
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type ScrollBar}">
									<Grid x:Name="Bg"
										  Background="#7FBFBFBF"
										  SnapsToDevicePixels="True">
										<Grid.RowDefinitions>
											<RowDefinition Height="0.00001*" />
										</Grid.RowDefinitions>
										<Track Name="PART_Track"
											   Width="{TemplateBinding Width}"
											   HorizontalAlignment="Center"
											   IsDirectionReversed="True"
											   Maximum="{TemplateBinding Maximum}"
											   Minimum="{TemplateBinding Minimum}"
											   Value="{TemplateBinding Value}">
											<Track.DecreaseRepeatButton>
												<RepeatButton Command="ScrollBar.LineUpCommand"
															  Template="{DynamicResource ScrollBackground}" />
											</Track.DecreaseRepeatButton>
											<Track.IncreaseRepeatButton>
												<RepeatButton Command="ScrollBar.LineDownCommand"
															  Template="{DynamicResource ScrollBackground}" />
											</Track.IncreaseRepeatButton>
											<Track.Thumb>
												<Thumb Style="{DynamicResource ScrollThumbStyle}" />
											</Track.Thumb>
										</Track>
									</Grid>
								</ControlTemplate>
							</Setter.Value>
						</Setter>

						<Style.Triggers>
							<Trigger Property="Orientation" Value="Horizontal">
								<Setter Property="Width" Value="Auto" />
								<Setter Property="MinWidth" Value="0" />
								<Setter Property="Height" Value="15" />
								<Setter Property="MinHeight" Value="15" />
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="{x:Type ScrollBar}">
											<Grid x:Name="Bg"
												  Background="#7FA7A7A7"
												  SnapsToDevicePixels="True">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="0.00001*" />
												</Grid.ColumnDefinitions>
												<Track x:Name="PART_Track"
													   Grid.Column="1"
													   IsEnabled="{TemplateBinding IsMouseOver}">
													<Track.DecreaseRepeatButton>
														<RepeatButton Command="ScrollBar.LineUpCommand"
																	  Template="{DynamicResource ScrollBackground}" />
													</Track.DecreaseRepeatButton>
													<Track.IncreaseRepeatButton>
														<RepeatButton Command="ScrollBar.LineDownCommand"
																	  Template="{DynamicResource ScrollBackground}" />
													</Track.IncreaseRepeatButton>
													<Track.Thumb>
														<Thumb Height="15"
															   Style="{DynamicResource ScrollThumbStylecrosswise}" />
													</Track.Thumb>
												</Track>
											</Grid>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Trigger>
						</Style.Triggers>
					</Style>
				</Style.Resources>
			</Style>

			<!--  Default DataGrid Style  -->
			<Style TargetType="{x:Type DataGrid}">
				<Style.Setters>
					<Setter Property="FontSize" Value="14" />
					<Setter Property="IsReadOnly" Value="True" />
					<Setter Property="SelectionMode" Value="Single" />
					<Setter Property="RowHeight" Value="25" />
					<Setter Property="CanUserAddRows" Value="False" />
					<Setter Property="AutoGenerateColumns" Value="False" />
					<Setter Property="VerticalGridLinesBrush" Value="{StaticResource AppThemePrimaryColor}" />
					<Setter Property="HorizontalGridLinesBrush" Value="{StaticResource AppThemePrimaryColor}" />
					<EventSetter Event="SelectionChanged"
								 Handler="DataGrid_SelectionChanged" />
				</Style.Setters>

				<Style.Resources>
					<Style TargetType="{x:Type ScrollBar}">
						<Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
						<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
						<Setter Property="MinWidth" Value="10" />
						<Setter Property="Focusable" Value="False" />
						<Setter Property="Width" Value="15" />
						<Setter Property="IsTabStop" Value="False" />
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type ScrollBar}">
									<Grid x:Name="Bg"
										  Background="#7FBFBFBF"
										  SnapsToDevicePixels="True">
										<Grid.RowDefinitions>
											<RowDefinition Height="0.00001*" />
										</Grid.RowDefinitions>
										<Track Name="PART_Track"
											   Width="{TemplateBinding Width}"
											   HorizontalAlignment="Center"
											   IsDirectionReversed="True"
											   Maximum="{TemplateBinding Maximum}"
											   Minimum="{TemplateBinding Minimum}"
											   Value="{TemplateBinding Value}">
											<Track.DecreaseRepeatButton>
												<RepeatButton Command="ScrollBar.LineUpCommand"
															  Template="{DynamicResource ScrollBackground}" />
											</Track.DecreaseRepeatButton>
											<Track.IncreaseRepeatButton>
												<RepeatButton Command="ScrollBar.LineDownCommand"
															  Template="{DynamicResource ScrollBackground}" />
											</Track.IncreaseRepeatButton>
											<Track.Thumb>
												<Thumb Style="{DynamicResource ScrollThumbStyle}" />
											</Track.Thumb>
										</Track>
									</Grid>
								</ControlTemplate>
							</Setter.Value>
						</Setter>

						<Style.Triggers>
							<Trigger Property="Orientation" Value="Horizontal">
								<Setter Property="Width" Value="Auto" />
								<Setter Property="MinWidth" Value="0" />
								<Setter Property="Height" Value="15" />
								<Setter Property="MinHeight" Value="15" />
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="{x:Type ScrollBar}">
											<Grid x:Name="Bg"
												  Background="#7FA7A7A7"
												  SnapsToDevicePixels="True">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="0.00001*" />
												</Grid.ColumnDefinitions>
												<Track x:Name="PART_Track"
													   Grid.Column="1"
													   IsEnabled="{TemplateBinding IsMouseOver}">
													<Track.DecreaseRepeatButton>
														<RepeatButton Command="ScrollBar.LineUpCommand"
																	  Template="{DynamicResource ScrollBackground}" />
													</Track.DecreaseRepeatButton>
													<Track.IncreaseRepeatButton>
														<RepeatButton Command="ScrollBar.LineDownCommand"
																	  Template="{DynamicResource ScrollBackground}" />
													</Track.IncreaseRepeatButton>
													<Track.Thumb>
														<Thumb Height="15"
															   Style="{DynamicResource ScrollThumbStylecrosswise}" />
													</Track.Thumb>
												</Track>
											</Grid>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Trigger>
						</Style.Triggers>
					</Style>
				</Style.Resources>
			</Style>

			<!--  Default DataGrid Column Header Style  -->
			<Style TargetType="{x:Type DataGridColumnHeader}">
				<Setter Property="BorderThickness" Value="0 0 1 1" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="TextBlock.TextAlignment" Value="Center" />
				<Setter Property="Background" Value="DarkSlateGray" />
				<Setter Property="Foreground" Value="White" />
				<Setter Property="MinWidth" Value="175" />
				<Setter Property="MinHeight" Value="40" />
				<Setter Property="ContentTemplate">
					<Setter.Value>
						<DataTemplate>
							<TextBlock Text="{Binding}"
									   TextWrapping="Wrap" />
						</DataTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
							<Grid>
								<Rectangle x:Name="BackgroundRectangle"
										   Fill="{TemplateBinding Background}"
										   RadiusX="5"
										   RadiusY="5" />
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												  RecognizesAccessKey="True"
												  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								<Path x:Name="SortArrow"
									  Width="8"
									  Height="6"
									  Margin="5"
									  HorizontalAlignment="Right"
									  VerticalAlignment="Center"
									  Data="M0,0 L1,0 0.5,1 z"
									  Fill="White"
									  Stretch="Fill"
									  Visibility="Collapsed">
									<Path.RenderTransform>
										<RotateTransform Angle="90" />
									</Path.RenderTransform>
								</Path>
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="CommonStates">
										<VisualState x:Name="Normal" />
										<VisualState x:Name="MouseOver">
											<Storyboard>
												<ColorAnimation Storyboard.TargetName="BackgroundRectangle"
																Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
																To="LightGray"
																Duration="0:0:0.2" />
											</Storyboard>
										</VisualState>
										<VisualState x:Name="Pressed">
											<Storyboard>
												<ColorAnimation Storyboard.TargetName="BackgroundRectangle"
																Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
																To="Gray"
																Duration="0:0:0.2" />
											</Storyboard>
										</VisualState>
										<VisualState x:Name="Disabled" />
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="SortDirection" Value="Ascending">
									<Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
									<Setter TargetName="SortArrow" Property="RenderTransform">
										<Setter.Value>
											<RotateTransform Angle="0" />
										</Setter.Value>
									</Setter>
								</Trigger>
								<Trigger Property="SortDirection" Value="Descending">
									<Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
									<Setter TargetName="SortArrow" Property="RenderTransform">
										<Setter.Value>
											<RotateTransform Angle="180" />
										</Setter.Value>
									</Setter>
								</Trigger>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter TargetName="BackgroundRectangle" Property="Opacity" Value="0.5" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<!--  Default DataGrid Column Cell Style  -->
			<Style TargetType="{x:Type DataGridCell}">
				<Style.Setters>
					<Setter Property="IsTabStop" Value="False" />
					<Setter Property="HorizontalContentAlignment" Value="Center" />
					<Setter Property="VerticalContentAlignment" Value="Center" />
					<Setter Property="TextBlock.TextAlignment" Value="Center" />
					<Setter Property="FocusVisualStyle" Value="{x:Null}" />
					<EventSetter Event="MouseEnter"
								 Handler="DataGridCell_MouseEnterEvent" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type DataGridCell}">
								<Grid Background="{TemplateBinding Background}">
									<ContentPresenter MinWidth="90"
													  MaxHeight="40"
													  VerticalAlignment="Center" />
								</Grid>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style.Setters>

				<Style.Triggers>
					<Trigger Property="IsSelected" Value="True">
						<Setter Property="Background" Value="SlateGray" />
						<Setter Property="Foreground" Value="White" />
					</Trigger>
				</Style.Triggers>
			</Style>

			<!--  ScrollBar Background Style  -->
			<ControlTemplate x:Key="ScrollBackground"
							 TargetType="RepeatButton">
				<Border Background="{StaticResource AppThemeQuaternaryColor}" />
			</ControlTemplate>

			<!--  Vertical ScrollBar Thumb Style  -->
			<Style x:Key="ScrollThumbStyle"
				   TargetType="Thumb">
				<Setter Property="SnapsToDevicePixels" Value="True" />
				<Setter Property="OverridesDefaultStyle" Value="True" />
				<Setter Property="IsTabStop" Value="False" />
				<Setter Property="Focusable" Value="False" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="Thumb">
							<Rectangle Width="15"
									   Fill="DarkSlateGray" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<!--  Horizontal ScrollBar Thumb Style  -->
			<Style x:Key="ScrollThumbStylecrosswise"
				   TargetType="Thumb">
				<Setter Property="SnapsToDevicePixels" Value="True" />
				<Setter Property="OverridesDefaultStyle" Value="True" />
				<Setter Property="IsTabStop" Value="False" />
				<Setter Property="Focusable" Value="False" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="Thumb">
							<Rectangle Fill="DarkSlateGray" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<!--  MessageBox Style  -->
			<Style TargetType="{x:Type xctk:MessageBox}">
				<Setter Property="Width" Value="450" />
				<Setter Property="WindowBorderThickness" Value="2" />
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="Foreground" Value="{DynamicResource AppThemePrimaryColor}" />
				<Setter Property="NoButtonStyle" Value="{DynamicResource ResponseButtonStyle}" />
				<Setter Property="OkButtonStyle" Value="{DynamicResource ResponseButtonStyle}" />
				<Setter Property="CloseButtonStyle" Value="{DynamicResource CloseButtonStyle}" />
				<Setter Property="BorderBrush" Value="{DynamicResource AppThemePrimaryColor}" />
				<Setter Property="YesButtonStyle" Value="{DynamicResource ResponseButtonStyle}" />
				<Setter Property="Background" Value="{DynamicResource AppThemeQuaternaryColor}" />
				<Setter Property="CancelButtonStyle" Value="{DynamicResource ResponseButtonStyle}" />
				<Setter Property="WindowBackground" Value="{DynamicResource AppThemePrimaryColor}" />
				<Setter Property="WindowBorderBrush" Value="{DynamicResource AppThemePrimaryColor}" />
				<Setter Property="CaptionForeground" Value="{DynamicResource AppThemeQuaternaryColor}" />
				<Setter Property="ButtonRegionBackground" Value="{DynamicResource AppThemeQuaternaryColor}" />
			</Style>

			<SolidColorBrush x:Key="ResponseButtonHoverBrush"
							 Color="#FFB6DDF3" />
			<SolidColorBrush x:Key="ResponseButtonPressedBrush"
							 Color="#D1EAFF" />
			<SolidColorBrush x:Key="CloseButtonHoverBrush"
							 Color="#A93226" />
			<SolidColorBrush x:Key="CloseButtonPressedBrush"
							 Color="#E74C3C" />

			<!--  MessageBox Close Button Style  -->
			<Style x:Key="CloseButtonStyle"
				   TargetType="Button">
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="Button">
							<Grid>
								<Border x:Name="Background"
										Background="#E74C3C"
										CornerRadius="1">
									<Border BorderBrush="#59FFFFFF"
											BorderThickness="1"
											CornerRadius="1" />
								</Border>

								<ContentPresenter x:Name="contentPresenter"
												  Margin="{TemplateBinding Padding}"
												  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												  Content="{TemplateBinding Content}"
												  ContentTemplate="{TemplateBinding ContentTemplate}" />

								<Path x:Name="path"
									  Margin="1"
									  Data="M 2,6 C2,6 3,6 3,6 3,6 3,5 3,5 3,5 4,5 4,5 4,5 4,6 4,6 4,6 5,6 5,6 5,6 7,6 7,6 7,6 7,5 7,5 7,5 6,5 6,5 6,5 6,4 6,4 6,4 5,4 5,4 5,4 5,2 5,2 5,2 6,2 6,2 6,2 6,1 6,1 6,1 7,1 7,1 7,1 7,0 7,0 7,0 5,0 5,0 5,0 4,0 4,0 4,0 4,1 4,1 4,1 3,1 3,1 3,1 3,0 3,0 3,0 2,0 2,0 2,0 0,0 0,0 0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,4 2,4 2,4 1,4 1,4 1,4 1,5 1,5 1,5 0,5 0,5 0,5 0,6 0,6 0,6 2,6 2,6 z"
									  Fill="White"
									  Opacity="1"
									  Stretch="Fill"
									  Visibility="Collapsed" />
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="CommonStates">
										<VisualState x:Name="Normal" />

										<VisualState x:Name="MouseOver">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
																			   Storyboard.TargetName="Background"
																			   Storyboard.TargetProperty="(Border.Background)"
																			   Duration="00:00:00.0010000">
													<DiscreteObjectKeyFrame KeyTime="00:00:00"
																			Value="{StaticResource CloseButtonHoverBrush}" />
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>

										<VisualState x:Name="Pressed">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
																			   Storyboard.TargetName="Background"
																			   Storyboard.TargetProperty="(Border.Background)"
																			   Duration="00:00:00.0010000">
													<DiscreteObjectKeyFrame KeyTime="00:00:00"
																			Value="{StaticResource CloseButtonPressedBrush}" />
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<!--  MessageBox Response Button Style  -->
			<Style x:Key="ResponseButtonStyle"
				   TargetType="Button">
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="Button">
							<Grid>
								<Border x:Name="Background"
										Width="70"
										Height="25"
										Background="{DynamicResource AppThemeTetriaryColor}"
										CornerRadius="2">
									<Border BorderBrush="Black"
											BorderThickness="1"
											CornerRadius="3" />
								</Border>

								<ContentPresenter x:Name="contentPresenter"
												  Margin="{TemplateBinding Padding}"
												  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												  Content="{TemplateBinding Content}"
												  ContentTemplate="{TemplateBinding ContentTemplate}" />
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="CommonStates">
										<VisualState x:Name="Normal" />

										<VisualState x:Name="MouseOver">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
																			   Storyboard.TargetName="Background"
																			   Storyboard.TargetProperty="(Border.Background)"
																			   Duration="00:00:00.0010000">
													<DiscreteObjectKeyFrame KeyTime="00:00:00"
																			Value="{StaticResource ResponseButtonHoverBrush}" />
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>

										<VisualState x:Name="Pressed">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
																			   Storyboard.TargetName="Background"
																			   Storyboard.TargetProperty="(Border.Background)"
																			   Duration="00:00:00.0010000">
													<DiscreteObjectKeyFrame KeyTime="00:00:00"
																			Value="{StaticResource ResponseButtonPressedBrush}" />
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<LinearGradientBrush x:Key="TextBoxBorder" MappingMode="Absolute" StartPoint="0,0" EndPoint="0,20">
				<GradientStop Offset="0.05" Color="#ABADB3" />
				<GradientStop Offset="0.07" Color="#E2E3EA" />
				<GradientStop Offset="1" Color="#E3E9EF" />
			</LinearGradientBrush>

			<LinearGradientBrush x:Key="TextBox_MouseOver" StartPoint="0,0" EndPoint="0,1">
				<GradientStop Offset="0.05" Color="#5794BF" />
				<GradientStop Offset="0.07" Color="#B7D5EA" />
				<GradientStop Offset="1" Color="#C7E2F1" />
			</LinearGradientBrush>

			<LinearGradientBrush x:Key="TextBox_Focused" StartPoint="0,0" EndPoint="0,1">
				<GradientStop Offset="0.05" Color="#3D7BAD" />
				<GradientStop Offset="0.07" Color="#A4C9E3" />
				<GradientStop Offset="1" Color="#B7D9ED" />
			</LinearGradientBrush>

			<SolidColorBrush x:Key="TextBox_DisabledBorder"
							 Color="#ADB2B5" />
			<SolidColorBrush x:Key="TextBox_DisabledBackground"
							 Color="#F4F4F4" />

			<DataTemplate x:Key="DefaultWatermarkTemplate">
				<ContentControl Content="{Binding}"
								Focusable="False"
								Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
			</DataTemplate>

			<Style TargetType="{x:Type xctk:WatermarkTextBox}">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
				<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Padding" Value="3 5" />
				<Setter Property="AllowDrop" Value="True" />
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
				<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
				<Setter Property="WatermarkTemplate" Value="{StaticResource DefaultWatermarkTemplate}" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type xctk:WatermarkTextBox}">
							<Grid>

								<Border x:Name="Border"
										Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										CornerRadius="5" />
								<Border x:Name="MouseOverVisual"
										BorderBrush="{StaticResource TextBox_MouseOver}"
										BorderThickness="{TemplateBinding BorderThickness}"
										CornerRadius="5"
										Opacity="0" />
								<Border x:Name="FocusVisual"
										BorderBrush="{StaticResource TextBox_Focused}"
										BorderThickness="{TemplateBinding BorderThickness}"
										CornerRadius="5"
										Opacity="0" />
								<ScrollViewer x:Name="PART_ContentHost"
											  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								<ContentPresenter x:Name="PART_WatermarkHost"
												  Margin="{TemplateBinding Padding}"
												  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												  Content="{TemplateBinding Watermark}"
												  ContentTemplate="{TemplateBinding WatermarkTemplate}"
												  IsHitTestVisible="False"
												  Visibility="Collapsed" />
							</Grid>

							<ControlTemplate.Triggers>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="Text" Value="" />
									</MultiTrigger.Conditions>
									<MultiTrigger.Setters>
										<Setter TargetName="PART_WatermarkHost" Property="Visibility" Value="Visible" />
									</MultiTrigger.Setters>
								</MultiTrigger>

								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsKeyboardFocusWithin" Value="True" />
										<Condition Property="Text" Value="" />
									</MultiTrigger.Conditions>

									<MultiTrigger.EnterActions>
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation Storyboard.TargetName="PART_WatermarkHost"
																 Storyboard.TargetProperty="Opacity"
																 To=".33"
																 Duration="0:0:0.2" />
											</Storyboard>
										</BeginStoryboard>
									</MultiTrigger.EnterActions>

									<MultiTrigger.ExitActions>
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation Storyboard.TargetName="PART_WatermarkHost"
																 Storyboard.TargetProperty="Opacity"
																 Duration="0:0:0.4" />
											</Storyboard>
										</BeginStoryboard>
									</MultiTrigger.ExitActions>
								</MultiTrigger>

								<Trigger Property="Text" Value="">
									<Trigger.EnterActions>
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation Storyboard.TargetName="PART_WatermarkHost"
																 Storyboard.TargetProperty="Opacity"
																 Duration="0:0:0.4" />
											</Storyboard>
										</BeginStoryboard>
									</Trigger.EnterActions>

									<Trigger.ExitActions>
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation Storyboard.TargetName="PART_WatermarkHost"
																 Storyboard.TargetProperty="Opacity"
																 To="0"
																 Duration="0:0:0.2" />
											</Storyboard>
										</BeginStoryboard>
									</Trigger.ExitActions>
								</Trigger>

								<Trigger Property="IsMouseOver" Value="True">
									<Setter TargetName="MouseOverVisual" Property="Opacity" Value="1" />
								</Trigger>

								<Trigger Property="IsFocused" Value="True">
									<Setter TargetName="FocusVisual" Property="Opacity" Value="1" />
								</Trigger>

								<Trigger Property="IsEnabled" Value="False">
									<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TextBox_DisabledBorder}" />
									<Setter TargetName="Border" Property="Background" Value="{StaticResource TextBox_DisabledBackground}" />
									<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</Application.Resources>
</Application>
